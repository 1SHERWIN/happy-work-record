#################################################################################
# Created by Sherwin Massoudian
# Preparing Real Data
#################################################################################


Five samples of pair end fastq reads were alligned to the HG38 human reference genome using BWA. Step 1 is to allign using aln is allign (Options -I to specify Illumina 1.3+ and -t to specify thread count were used). Step 2 is to convert the pair end reads to the sam format using sampe (-P to load index to memory for better preformance was used). The mapped reads were converted from sam to bam and sorted using samtools 1.9. Step 1 is to view the reads in bam format using view (-b specified bam output and -o specified the output file). Step 2 is to sort the bam file (-o specified the output file). The sorted bam file is then searched for SNPs using bcftools 1.9. Step 1 is to use mpileup to find variation (-I Indels are skipped, -g Genotype to BCF output, -a AD annotate Allele Depth, -a DP annotate Depth, -f FASTA format index). Step 2 is to filter the variants for quality using view (-i include only if above minimum depth). Step 3 is to search the vcf file for SNPs using call (-c consensus caller, -v variant sites only output, -o output file) Next the two DBM input files sample.snps and sample.counts are prepared using the vcf file containing the SNPs. These input files are generated using the perl scripts get5SampleKey.pl and getCount.pl, and the DBM header is inserted into the counts file using the Unix command sed. DBM is then ran by specifyinh the prefix of the two input files sample.snps and sample.counts ('sample' in this case) and the haplotype file sample.g is generated.

D CHR POS I1 I1 I2 I2 I3 I3
0 chr10 48086 0 1 1 0 1 1
1 chr10 789566 1 0 0 1 0 1
2 chr10 1182970 1 1 1 0 0 1
3 chr10 1183069 0 1 0 1 1 1



# Prepared DBM Input sample.snps and sample.counts
cp bcftools/7.21/*.vcf dbm/7.21


# Step 1: Created sample.SNPs
/home/s_m774/project/data/dbm
# cut
# -f fields
# sed to tab delimit
# s is substitute
# g is globally
# awk to place fields in the correct order
# sed to tab delimit

grep ^chr10 826.vcf | cut -f 1,2,4,5,6,10 | sed s/:/\\t/g | awk '{print $1"\t"$2"\t"$9"\t"$3"\t"$4"\t"$5}' | sed s/,/\\t/g > 826.pos
grep ^chr10 827.vcf | cut -f 1,2,4,5,6,10 | sed s/:/\\t/g | awk '{print $1"\t"$2"\t"$9"\t"$5"\t"$3"\t"$4}' | sed s/,/\\t/g > 827.pos
grep ^chr10 832.vcf | cut -f 1,2,4,5,6,10 | sed s/:/\\t/g | awk '{print $1"\t"$2"\t"$9"\t"$5"\t"$3"\t"$4}' | sed s/,/\\t/g > 832.pos

# SNP counts at â‰¥4 coverage, pair end
wc -l *.pos
  149 826.pos
  185 827.pos
  233 832.pos


# cat to combine each individual
# grep to filter chromosome 10
# cut to get chromosome and positon fields
# -f fields
# sort by positon
# -k sort starting on specified field
# -n numerically
# -u unique rows
# awk to give each SNP postion an ID and quality
# NR is number of records and the current row number
cat *.pos | cut -f 1,2 | sort -k 2 -nu | awk '{print NR - 1"\t"$1"\t"$2"\t100"}' > sample.snps

# sample.snps
0       chr10   48086   100
1       chr10   789566  100
2       chr10   1182970 100
3       chr10   1183069 100
4       chr10   1184763 100
5       chr10   1185028 100
6       chr10   1185195 100
7       chr10   1185203 100
8       chr10   1199953 100
9       chr10   1217136 100
10      chr10   1233504 100
11      chr10   1233561 100
12      chr10   1233656 100
13      chr10   1233977 100
14      chr10   1233978 100
15      chr10   1271134 100
16      chr10   1379321 100
17      chr10   1737155 100
18      chr10   2323867 100





# Step 2: Created sample.counts
perl /home/s_m774/software/DBM/prepare.pl sample.snps 826.pos 826.counts
perl /home/s_m774/software/DBM/prepare.pl sample.snps 827.pos 827.counts
perl /home/s_m774/software/DBM/prepare.pl sample.snps 832.pos 832.counts


wc -l *.counts
  418 826.counts
  418 827.counts
  418 832.counts
  
  
  

# Created sample.counts from 826.counts 827.counts 832.counts
# cut to get allele count fields
# -f fields to be cut
# paste appends the fields in file2 on file1
cut -f 3,4 827.counts | paste 826.counts - > 826.827.counts
cut -f 3,4 832.counts | paste 826.827.counts - > sample.counts

# Inserted DBM header 
# -i is insert
# 1s to insert at the top of file
sed -i '1s/^/I\tSID\tI1\tI1\tI2\tI2\tI3\tI3\n/' sample.counts

# sample.counts
I       SID     I1      I1      I2      I2      I3      I3
M       0       0       0       0       0       0       4
M       1       0       0       0       0       3       2
M       2       0       5       0       0       0       0
M       3       0       0       0       0       0       20
M       4       9       2       0       0       0       0
M       5       36      18      0       0       0       127
M       6       0       0       0       0       0       19
M       7       0       0       6       2       0       0
M       8       0       23      26      4       20      12
M       9       0       0       0       0       44      28
M       10      0       16      0       0       0       0
M       11      0       40      31      6       47      21
M       12      0       0       0       0       120     104
M       13      0       0       0       0       1       5
M       14      0       0       0       0       1       5
M       15      21      13      0       0       0       0
M       16      0       6       0       0       0       0
M       17      14      13      0       0       0       0

...

M       408     0       5       0       0       0       0
M       409     0       0       0       5       0       0
M       410     1       4       0       0       1       5
M       411     2       2       0       0       0       0
M       412     1       3       0       0       0       0
M       413     3       2       0       0       0       0
M       414     4       2       0       0       0       0
M       415     2       3       0       0       0       0
M       416     0       0       0       4       0       0
M       417     0       0       0       0       0       3

#################################################################################
# Running Real Data 
#################################################################################

# Ran DBM on 826 827 832
/home/s_m774/project/dbm/7.21

cp data/dbm/7.21/sample.* project/dbm/7.21
/home/s_m774/software/DBM/dbm sample

N=3 estimated proportion of FP sites = 0.000016
N = 3(0), L = 1747, lambda=3.263881
N=3, L=1747, ploidity=2, a=0.510640
K=9

...

foward time = 0.000000 sec
backward time = 0.160000 sec
time1=1.990000 sec      time2=0.720000 sec
summarize posteriors...done
total time = 3sec

# sample.g
D CHR POS I1 I1 I2 I2 I3 I3
0 chr10 48086 0 1 1 0 1 1
1 chr10 789566 1 0 0 1 0 1
2 chr10 1182970 1 1 1 0 0 1
3 chr10 1183069 0 1 0 1 1 1
4 chr10 1184763 1 0 0 1 1 0
5 chr10 1185028 0 1 1 0 1 1
6 chr10 1185195 0 1 1 0 1 1
7 chr10 1185203 1 0 0 1 0 1
8 chr10 1199953 1 1 0 1 0 1
9 chr10 1217136 1 0 0 1 0 1
10 chr10 1233504 1 1 0 1 0 1
11 chr10 1233561 1 1 0 1 0 1
12 chr10 1233656 1 0 0 1 1 0
13 chr10 1233977 1 0 1 0 1 0
14 chr10 1233978 1 0 1 0 1 0
15 chr10 1271134 1 0 0 1 0 1
16 chr10 1379321 1 1 1 1 1 0
17 chr10 1737155 1 0 1 0 0 1










