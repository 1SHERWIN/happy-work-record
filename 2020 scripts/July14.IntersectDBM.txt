#################################################################################
# Created by Sherwin Massoudian
# Preparing Real Data
#################################################################################

# Found all SNPs with bcftools
/home/s_m774/project/data/bcftools/7.14

wc -l *.txt
   7,005,632 826T_1_sequence.txt
   6,211,528 827T_1_sequence.txt
  11,337,320 832T_1_sequence.txt
  24,554,480 total

# Reference genome
/group/hon/hon3398o/0.course.files/Data/Reference/align.index/hg38.align.index/bwa-0.7.17.hg38.index/hg38.fa

cp *.bam intersect/
cp hg38.* intersect/

# Mpileup to find SNPs
# -I Indels are skipped
# -g Genotype to BCF output
# -a AD annotate Allele Depth
# -a DP annotate Depth
# -f FASTA format index

# View to filter minimum depth
# -i include only if above minimum depth

# Call to filter SNPs
# -c consensus caller
# -v variant sites only output
# -o output file


time /group/hon/hon3398o/0.course.files/software/bcftools-1.9/bcftools mpileup -I -a AD -a DP -f hg38.fa 826.bam | /group/hon/hon3398o/0.course.files/software/bcftools-1.9/bcftools call -cv -o 826.vcf
time /group/hon/hon3398o/0.course.files/software/bcftools-1.9/bcftools mpileup -I -a AD -a DP -f hg38.fa 827.bam | /group/hon/hon3398o/0.course.files/software/bcftools-1.9/bcftools call -cv -o 827.vcf
time /group/hon/hon3398o/0.course.files/software/bcftools-1.9/bcftools mpileup -I -a AD -a DP -f hg38.fa 832.bam | /group/hon/hon3398o/0.course.files/software/bcftools-1.9/bcftools call -cv -o 832.vcf

real    1m57.721s
user    2m37.937s
sys     0m2.308s

# 826.vcf
...
chrY    10200144        .       T       C       11.1139 .       DP=2;VDB=0.38;SGB=-0.453602;MQ0F=0;AF1=1;AC1=2;DP4=0,0,2,0;MQ=23;FQ=-32.9882    GT:PL:DP:AD     1/1:42,6,0:2:0,2
chrY    10200177        .       G       A       10.8822 .       DP=4;VDB=0.820274;SGB=-0.556411;MQ0F=0.5;AF1=1;AC1=2;DP4=0,0,4,0;MQ=16;FQ=-38.9866      GT:PL:DP:AD     1/1:43,12,0:4:0,4
chrY    10200216        .       T       C       29.0396 .       DP=12;VDB=0.0256122;SGB=-0.636426;RPB=0.0401934;MQB=0.924449;MQSB=0.333333;BQB=0.562708;MQ0F=0.416667;AF1=0.503167;AC1=1;DP4=4,0,5,2;MQ=19;FQ=-8.62677;PV4=0.490909,0.149419,1,0.0234789        GT:PL:DP:AD     0/1:59,0,19:11:4,7
chrY    10200266        .       C       T       146.051 .       DP=15;VDB=0.00114085;SGB=-0.670168;RPB=0.0270518;MQB=0.266468;MQSB=1;BQB=0.405555;MQ0F=0.2;AF1=0.505038;AC1=1;DP4=1,3,5,5;MQ=28;FQ=-10.4007;PV4=0.58042,0.488582,1,0.0419076    GT:PL:DP:AD     0/1:176,0,17:14:4,10
chrY    11385908        .       C       G       7.79993 .       DP=1;SGB=-0.379885;MQ0F=0;AF1=1;AC1=2;DP4=0,0,0,1;MQ=37;FQ=-29.991      GT:PL:DP:AD     1/1:37,3,0:1:0,1
chrY    56855347        .       T       C       7.79993 .       DP=1;SGB=-0.379885;MQ0F=0;AF1=1;AC1=2;DP4=0,0,0,1;MQ=37;FQ=-29.991      GT:PL:DP:AD     1/1:37,3,0:1:0,1


# Prepared DBM Input sample.snps and sample.counts
/home/s_m774/project/data/dbm/7.14/intersect
cp bcftools/7.14/intersect/*.vcf dbm/7.14/intersect/

# Step 1: Created sample.SNPs
# cut
# -f fields
# sed to tab delimit
# s is substitute
# g is globally
# awk to place fields in the correct order
# sed to tab delimit

grep ^chr10 826.vcf | cut -f 1,2,4,5,6,10 | sed s/:/\\t/g | awk '{print $1"\t"$2"\t"$9"\t"$3"\t"$4"\t"$5}' | sed s/,/\\t/g > 826.pos
grep ^chr10 827.vcf | cut -f 1,2,4,5,6,10 | sed s/:/\\t/g | awk '{print $1"\t"$2"\t"$9"\t"$5"\t"$3"\t"$4}' | sed s/,/\\t/g > 827.pos
grep ^chr10 832.vcf | cut -f 1,2,4,5,6,10 | sed s/:/\\t/g | awk '{print $1"\t"$2"\t"$9"\t"$5"\t"$3"\t"$4}' | sed s/,/\\t/g > 832.pos


# SNP counts at â‰¥1 coverage, single end
wc -l *.pos
  438 826.pos
  461 827.pos
  984 832.pos
 1883 total
 
# 826.pos
chr10   587617  0       1       C       A       7.79993
chr10   1101983 0       1       C       T       7.79993
chr10   1132778 0       1       C       A       7.79993
chr10   1182970 0       4       A       G       96.5136
chr10   1185028 21      7       C       T       87.0076
chr10   1199953 0       12      A       T       204.001
chr10   1233504 0       5       C       T       96.2638
chr10   1233561 0       15      T       G       156.998
chr10   1271134 4       6       C       T       89.0077
chr10   1329753 0       1       A       G       4.77219
chr10   1379321 0       4       A       G       80.5134
chr10   1588626 0       2       C       T       35.7656
chr10   1737155 4       4       G       A       78.0075
chr10   1737304 0       1       T       C       7.79993
chr10   1835251 1       1       G       A       3.54366
chr10   2647651 0       1       T       C       7.79993
chr10   2987303 0       2       G       A       14.9068
chr10   2988646 0       1       A       G       7.79993
chr10   2988648 0       1       T       C       7.79993
...

# cat to combine individuals
# cut to get chromosome and positon fields
# -f fields
# sort by positon
# -k sort starting on specified field
# -n numerically
# uniq to find intersect
# -d duplicate rows filtered
# awk to give each SNP an ID and quality
# NR is number of records and the current row number
cat 826.pos 827.pos | cut -f 1,2 | sort -n -k 2 | uniq -d > 826.827.intersect

cat 832.pos 826.827.intersect | cut -f 1,2 | sort -n -k 2 | uniq -d | awk '{print NR"\t"$1"\t"$2"\t100"}' > sample.snps

wc -l sample.snps
47 sample.snps

# sample.snps
1       chr10   1233561 		100
2       chr10   3010999 		100
3       chr10   3011174			100
4       chr10   5073699 		100
5       chr10   5073715 		100
6       chr10   8644132 		100
7       chr10   12702337        100
8       chr10   12702514        100
9       chr10   19612084        100
10      chr10   19612198        100
11      chr10   25599251        100
12      chr10   35605738        100
13      chr10   35605833        100
14      chr10   36950637        100
15      chr10   43100520        100
16      chr10   43106301        100
17      chr10   43108942        100
18      chr10   43111239        100
19      chr10   43126769        100



# Step 2: Created sample.counts

# join to map each individual to a key (sample.snps) 
# -a add unmatched rows 
# -j join on specified column
# -o output specified fields (file #).(field #)
# sort -n numerically
# sed to add an 'M' to each row, '^' specified the start of each row
# sed to convert space delimiter to tab delimiter
join -j1 -o1.2,2.4,2.5 <(<sample.snps awk '{print $3"\t"$0}' | sort -k1,1) <(<826.pos awk '{print $2"\t"$0}' | sort -k1,1) | sort -n | sed 's/^/M /' | sed "s/ /\t/g" > 826.counts
join -j1 -o1.2,2.4,2.5 <(<sample.snps awk '{print $3"\t"$0}' | sort -k1,1) <(<827.pos awk '{print $2"\t"$0}' | sort -k1,1) | sort -n | sed 's/^/M /' | sed "s/ /\t/g" > 827.counts
join -j1 -o1.2,2.4,2.5 <(<sample.snps awk '{print $3"\t"$0}' | sort -k1,1) <(<832.pos awk '{print $2"\t"$0}' | sort -k1,1) | sort -n | sed 's/^/M /' | sed "s/ /\t/g" > 832.counts

wc -l *.counts
  47 826.counts
  47 827.counts
  47 832.counts
  
# 826.counts
M       1       0       15
M       2       0       10
M       3       0       74
M       4       0       48
M       5       0       58
M       6       9       20
M       7       49      22
M       8       0       15
M       9       0       28
M       10      0       12
M       11      44      33
M       12      0       23
M       13      0       1
M       14      10      13
M       15      0       93
M       16      0       3
M       17      0       7
M       18      78      15
M       19      0       79
... 

# 827.counts
M       1       16      4
M       2       0       12
M       3       0       59
M       4       0       58
M       5       0       61
M       6       3       15
M       7       0       36
M       8       0       1
M       9       0       43
M       10      0       7
M       11      52      15
M       12      0       4
M       13      0       1
M       14      19      4
M       15      0       89
M       16      0       5
M       17      0       1
M       18      16      31
M       19      0       50
...

# 832.counts
M       1       24      10
M       2       0       43
M       3       83      96
M       4       0       105
M       5       0       112
M       6       58      38
M       7       0       98
M       8       0       16
M       9       0       92
M       10      0       30
M       11      86      75
M       12      0       51
M       13      0       7
M       14      23      22
M       15      83      58
M       16      1       3
M       17      6       7
M       18      0       117
M       19      61      53
...

# Created sample.counts from 826.counts 827.counts 832.counts
# -f cut the specified fields
# paste appends the fields in file2 on file1
cut -f 3,4 827.counts | paste 826.counts - > 826.827.counts
cut -f 3,4 832.counts | paste 826.827.counts - > sample.counts

# Inserted DBM header 
# -i is insert
# 1s to insert at the top of file
sed -i '1s/^/I\tSID\tI1\tI1\tI2\tI2\tI3\tI3\n/' sample.counts

# sample.counts
I       SID     I1      I1      I2      I2      I3      I3
M       1       0       15      16      4       24      10
M       2       0       10      0       12      0       43
M       3       0       74      0       59      83      96
M       4       0       48      0       58      0       105
M       5       0       58      0       61      0       112
M       6       9       20      3       15      58      38
M       7       49      22      0       36      0       98
M       8       0       15      0       1       0       16
M       9       0       28      0       43      0       92
M       10      0       12      0       7       0       30
M       11      44      33      52      15      86      75
M       12      0       23      0       4       0       51
M       13      0       1       0       1       0       7
M       14      10      13      19      4       23      22
M       15      0       93      0       89      83      58
M       16      0       3       0       5       1       3
M       17      0       7       0       1       6       7
M       18      78      15      16      31      0       117


#################################################################################
# Running Real Data 
#################################################################################

# Ran DBM on 826 827 832
/home/s_m774/project/dbm/sample/7.14
cp data/dbm/7.14/intersect/sample.* dbm/sample/7.14/intersect

/home/s_m774/software/DBM/dbm sample

# sample.g
ID CHR POS I1 I1 I2 I2 I3 I3
1 chr10 1233561 1 1 0 1 1 0
2 chr10 3010999 1 1 1 1 1 1
3 chr10 3011174 1 1 1 1 1 0
4 chr10 5073699 1 1 1 1 1 1
5 chr10 5073715 1 1 1 1 1 1
6 chr10 8644132 0 1 1 0 1 0
7 chr10 12702337 1 0 1 1 1 1
8 chr10 12702514 1 1 1 1 1 1
9 chr10 19612084 1 1 1 1 1 1
10 chr10 19612198 1 1 1 1 1 1
11 chr10 25599251 1 0 1 0 0 1
12 chr10 35605738 1 1 1 1 1 1
13 chr10 35605833 1 1 1 1 1 1
14 chr10 36950637 1 0 0 1 0 1
15 chr10 43100520 1 1 1 1 1 0
16 chr10 43106301 1 1 1 1 1 0
17 chr10 43108942 1 1 1 1 1 0
18 chr10 43111239 1 0 1 0 1 1


