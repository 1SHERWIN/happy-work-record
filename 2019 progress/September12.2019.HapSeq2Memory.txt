#################################################################################
# Created by Sherwin Massoudian
# Preparing Real Data
# Download: https://github.com/ZhiGroup/HapSeq2
# Manual: https://github.com/ZhiGroup/HapSeq2/blob/master/HapSeq-Manual.pdf
#################################################################################



# Used sorted BAMs to prepare input. 	Samtools has the optiopn of sorted or unsorted BAMs.
/home/s_m774/data/HapSeq2/9.4
cp software/HapSeq2/* data/HapSeq2/9.4/
mkdir data/HapSeq2/9.4/BAMs
cp samtools/samples/* HapSeq2/9.4/BAMs/


# Prepared sample_list to generate input file with bam parser.pl

# CEU.sample.ID.txt for reference
NA06984
NA06985
NA06986
NA06989
NA06994
NA07000
NA07037
NA07048
NA07051
NA07056
NA07346
NA07347
NA07357
NA10847
NA10851
NA11829
NA11830
NA11831
NA11832


# TODO: correct bam parser

# sample.txt
826.sorted
827.sorted
832.sorted
847.sorted
850.sorted

# Bam Parser Usage: 
# /home/s_m774/software/HapSeq2/run_bam_parser.pl sample_list bam_dir vcf_file target_dir

perl /home/s_m774/software/HapSeq2/run_bam_parser.pl sample.txt BAMs/ chr10.vcf parsedTest/


# Prepared vcf_file to generate input with bam parser.pl
/home/s_m774/data/HapSeq2/samples

cp dbm/pair.2depth.5sample/qualityDBM.8.21/min3Sample/sample.snps HapSeq2/samples/

awk '{print "10\t" $3 "\t.\t" $5 "\t" $6 "\t" $4 "\tPASS\t."}' sample.snps > chr10.vcf

# sites.vcf for reference
20      6975891 rs186347986     A       G       100     PASS    .
20      6975897 rs190220390     C       T       100     PASS    .
20      6975940 rs181875260     G       A       100     PASS    .
20      6975946 rs186387184     A       C       100     PASS    .
20      6976002 rs191143402     A       C       100     PASS    .
20      6976018 rs142533517     G       A       100     PASS    .
20      6976100 rs183466423     G       A       100     PASS    .
20      6976115 rs2326858       C       T       100     PASS    .
20      6976344 rs151008471     G       A       100     PASS    .
20      6976682 rs185176249     G       A       100     PASS    .
20      6976690 rs117337440     G       A       100     PASS    .
20      6976715 rs12625040      G       A       100     PASS    .
20      6976735 rs115519689     C       G       100     PASS    .
20      6976850 rs74854074      T       C       100     PASS    .
20      6977183 rs116795929     T       A       100     PASS    .
20      6977223 rs2876056       C       T       100     PASS    .
20      6977334 rs190795014     C       T       100     PASS    .
20      6977361 rs183266434     G       A       100     PASS    .

# chr10.vcf
10      1183608 .       C       T       25.5149766666667        PASS    .
10      1185028 .       C       T       216.339 PASS    .
10      1199953 .       A       T       130.0072        PASS    .
10      1233561 .       T       G       137.0041        PASS    .
10      1737155 .       G       A       167.008666666667        PASS    .
10      3010999 .       A       C       186.5998        PASS    .
10      3011174 .       C       A       222.601 PASS    .
10      5073699 .       G       T       222.601 PASS    .
10      5073715 .       T       G       222.601 PASS    .
10      8644132 .       C       T       223.805 PASS    .
10      8644363 .       T       C       100.299033333333        PASS    .
10      11169710        .       A       G       54.3389666666667        PASS    .
10      12702337        .       C       G       222.601 PASS    .
10      12702503        .       A       G       179.7994        PASS    .
10      12702514        .       A       T       169.503 PASS    .
10      14436463        .       A       G       70.747285       PASS    .
10      19612084        .       C       G       221.999 PASS    .
10      19612198        .       A       T       181.7988        PASS    .
10      24524525        .       G       A       97.3294333333333        PASS    .


# Ran bam parser
/home/s_m774/data/HapSeq2/9.4

cp samples/chr10.vcf 9.4/

perl ./run_bam_parser.pl sample.txt BAMs chr10.vcf parsed

# Prepared count file
cat parsed/*.count.txt > count.txt

# Reference from sample data
1 1 0 0 1 8 0 8 0 8 0 8 0 11 0 13 0 4 0 0 3 4 0 8 1 8 0 6 0 3 0 10 0 10 0 0 8 6 0 7 0 8 0 11 0 7 0 11 0 9 0 11 0 7 0 11 0 11 0 13 0 12 0 9 0 8 0 10 0 9 0 9 0 7 0 4 0 0 10 3 0 0 8 8 0 7 0 11 0 6 0 9 0 0 8 8 0 6 0 6 0 11 0 9 0 10 0 3 0 7 0 15 0 5 0 5 0 8 0 10 0 10 0 13 0 10 0 11 0 8 0 9 0 5 0 5 0 7 0 7 0 8 1 9 0 5 0 15 0 10 0 11 0 3 0 8 0 8 0 6 0 4 0 0 8 8 0 9 0 9 0 2 0 2 0 10 0 10 0 7 0 8 0 10 0 7 0 8 0 6 0 6 0 7 0 13 0 9 0 9 0 8 0 7 0
2 2 0 0 1 5 0 4 0 4 0 5 0 2 0 2 0 1 0 0 1 3 0 2 0 2 0 2 0 3 0 3 0 1 0 1 1 1 0 2 0 3 0 4 0 4 0 4 0 4 0 5 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 4 0 4 0 5 0 0 0 1 1 0 0 0 4 4 0 4 0 0 0 0 0 2 0 1 1 2 0 3 0 3 0 1 0 1 0 1 0 1 0 1 0 1 0 2 0 2 0 2 0 2 0 2 0 1 0 2 0 1 0 3 0 2 0 2 0 2 0 2 0 3 0 4 0 3 0 2 0 2 0 5 0 8 0 3 0 1 0 1 0 1 0 2 0 0 2 1 0 1 0 4 0 3 4 7 0 2 0 2 0 2 0 2 0 4 0 3 0 3 0 3 0 0 0 0 0 2 0 2 0 2 0 3 0 3 0
3 3 0 0 1 3 0 3 0 2 0 3 0 3 0 3 0 5 0 0 4 3 0 8 0 8 2 7 0 6 0 10 0 10 0 0 6 7 0 8 0 5 0 9 0 4 0 9 0 10 0 9 0 6 0 6 0 7 0 6 0 6 0 4 0 6 0 7 0 6 0 6 0 7 0 10 0 0 9 3 0 0 11 10 0 11 0 7 0 2 0 9 0 0 4 3 0 4 0 4 0 5 0 4 1 9 0 5 0 5 0 2 0 3 0 4 0 6 0 4 0 4 0 6 0 3 0 6 0 13 0 12 0 11 0 11 0 8 0 2 0 4 0 4 0 3 0 6 0 4 0 10 0 5 0 9 0 10 0 8 0 0 0 0 1 5 0 7 0 3 0 4 0 4 0 5 0 4 0 4 0 5 0 3 0 4 0 2 0 5 0 1 0 2 0 6 0 4 0 3 0 4 0 4 0

# count.txt
5 5 0 0 1

# Prepared sites file
cut -f 2,4,5 chr10.vcf > sites.txt


# Reference from sample data
6975891 A       G
6975897 C       T
6975940 G       A
6975946 A       C
6976002 A       C
6976018 G       A
6976100 G       A
6976115 C       T
6976344 G       A
6976682 G       A
6976690 G       A
6976715 G       A
6976735 C       G
6976850 T       C
6977183 T       A
6977223 C       T
6977334 C       T
6977361 G       A
6977384 T       G

# sites.txt
1183608 C       T
1185028 C       T
1199953 A       T
1233561 T       G
1737155 G       A
3010999 A       C
3011174 C       A
5073699 G       T
5073715 T       G
8644132 C       T
8644363 T       C
11169710        A       G
12702337        C       G
12702503        A       G
12702514        A       T
14436463        A       G
19612084        C       G
19612198        A       T
24524525        G       A

# Optional input files
cat parsed/*.jump1.txt > jump1.txt
cat parsed/*.jump2.txt > jump2.txt
cat parsed/*.read.txt > read.txt



#################################################################################
# Running Sample Data 
#################################################################################

# TODO: Run HapSeq2
/home/s_m774/data/HapSeq2/9.4


# --readCounts is the counts file
# --polymorphicSites is a list of SNP sites
# -o output file

/home/s_m774/software/HapSeq2/hapseq2  --readCounts count.txt --polymorphicSites sites.txt --phase -o sample

# Expected console log
Loaded information on 100 polymorphic sites
Processing input files and allocating memory for haplotyping
               Haplotyping engine (max) ... 15.5 mb
          Memory for Jumping Reads (KZ) ... 16.3 mb
           Memory for MCMC Phasing (KZ) ... 812.2 kb
            Haplotyping engine (actual) ... 15.5 mb
Memory allocated successfully
Found initial haplotype set

Wrote out file [sample.rec] with mosaic crossover rates ...
Wrote out file [sample.erate] with per marker error rates ...

Estimated mismatch rate in Markov model is: 0.01000
Analysis took 0 seconds

# Error recieved when running
HapSeq for Genotype Calling and Haplotype Inference HAS CRASHED

The operating system has decided to terminate this program.
Either HapSeq requested too much memory or you have encountered a bug.

If you think this is deu to bugs, please report bugs via a short e-mail
either kzhang@ms.soph.aub.edu or dzhi@ms.soph.uab.edu.

MACH 1.0 crashed while loading next generation sequencing data - first pass

